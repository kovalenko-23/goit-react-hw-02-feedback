{"version":3,"sources":["Components/Section/Section.styled.jsx","Components/Section/Section.jsx","Components/FeedbackOptions/FeedbackOptions.styled.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Statistics/Statistics.styled.jsx","Components/Statistics/Statistics.jsx","Components/Notification.jsx","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Title","h1","Section","title","children","FeedbackButton","button","props","good","neutral","bad","FeedbackPannel","FeedbackOptions","onLeaveFeedback","type","onClick","Statistic","p","higlight","StatisticPannel","Statistics","total","positivePercentage","Message","Notification","message","App","state","option","setState","prevState","hasOwnProperty","this","countTotalFeedback","Object","values","reduce","prevValue","value","totalFeedback","className","toFixed","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAEaA,EAAUC,IAAOC,IAAV,wJAOPC,EAAQF,IAAOG,GAAV,4B,OCPLC,EAAU,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC5B,OACI,eAACP,EAAD,WAAS,cAACG,EAAD,UAAQG,IAAeC,MCF3BC,EAAiBP,IAAOQ,OAAV,wSAOH,SAAAC,GAAK,OAAIA,EAAMC,MAAQ,aACvB,SAAAD,GAAK,OAAIA,EAAME,SAAW,aAC1B,SAAAF,GAAK,OAAIA,EAAMG,KAAO,aAKjCC,EAAiBb,IAAOC,IAAV,8BCdda,EAAkB,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBAC7B,OACI,eAACF,EAAD,WACI,cAACN,EAAD,CAAgBG,MAAI,EAACM,KAAK,SAASC,QAAS,kBAAMF,EAAgB,SAAlE,kBACA,cAACR,EAAD,CAAgBI,SAAO,EAACK,KAAK,SAASC,QAAS,kBAAMF,EAAgB,YAArE,qBACA,cAACR,EAAD,CAAgBK,KAAG,EAACI,KAAK,SAASC,QAAS,kBAAMF,EAAgB,QAAjE,qBCLCG,EAAYlB,IAAOmB,EAAV,2FAGH,SAAAV,GAAK,OAAIA,EAAMW,UAAY,UAGjCC,EAAkBrB,IAAOC,IAAV,oFCNfqB,EAAa,SAAC,GAAqD,IAApDZ,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKW,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBACnD,OACI,eAACH,EAAD,WACI,eAACH,EAAD,oBAAkBR,KAClB,eAACQ,EAAD,uBAAqBP,KACrB,eAACO,EAAD,mBAAiBN,KACjB,eAACM,EAAD,CAAWE,UAAQ,EAAnB,oBAA4BG,OAC5B,eAACL,EAAD,CAAWE,UAAQ,EAAnB,gCAAwCI,IAAxC,WCPNC,EAAUzB,IAAOmB,EAAV,yLASAO,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3B,OACI,cAACF,EAAD,UAAUE,KCmDHC,EA1Df,4MACEC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOEG,gBAAkB,SAAAe,GAChB,EAAKC,UAAS,SAAAC,GACZ,GAAI,EAAKH,MAAMI,eAAeH,GAC5B,OAAO,eACJA,EAASE,EAAUF,GAAU,OAXxC,4CAiBE,WAAU,IAAD,OACP,EAA+BI,KAAKL,MAA5BnB,EAAR,EAAQA,KAAME,EAAd,EAAcA,IAAKD,EAAnB,EAAmBA,QAEbwB,EAAqB,WAKzB,OAJeC,OAAOC,OAAO,EAAKR,OACbS,QAAO,SAACC,EAAWC,GACtC,OAAOD,EAAYC,IAClB,IAUCC,EAAgBN,IAEtB,OACE,qBAAKO,UAAU,MAAf,SACE,eAAC,EAAD,CAASrC,MAAO,wBAAhB,UACE,cAAC,EAAD,CAAiBU,gBAAiBmB,KAAKnB,kBAEpB,IAAlB0B,EACC,cAAC,EAAD,CACE/B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLW,MAAOY,EACPX,mBAnB8B,WACtC,IAAMD,EAAQY,IAEd,OAD2B,IAAPzB,EAAca,GAChBoB,QAAQ,MAmBpB,cAAC,EAAD,CAAchB,QAAS,+BAlDnC,GAAyBiB,aCMVC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3d05074f.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    max-width: 1400px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n`\r\nexport const Title = styled.h1`\r\n`","import { Wrapper, Title } from './Section.styled';\r\n\r\nexport const Section = ({title, children}) => {\r\n    return (\r\n        <Wrapper><Title>{title}</Title>{children}</Wrapper>\r\n    )\r\n}\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FeedbackButton = styled.button`\r\n    margin-right: 5px;\r\n    margin-bottom: 30px;\r\n    width: 100px;\r\n    height: 40px;\r\n    font-size: medium;\r\n    font-weight: bold;\r\n    background-color: ${props => props.good && '#59df83'};\r\n    background-color: ${props => props.neutral && '#d4ec65'};\r\n    background-color: ${props => props.bad && '#ec8065'};\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`\r\nexport const FeedbackPannel = styled.div`\r\n\r\n`","import { FeedbackButton, FeedbackPannel } from \"./FeedbackOptions.styled\";\r\n\r\nexport const FeedbackOptions = ({onLeaveFeedback}) => {\r\n    return (\r\n        <FeedbackPannel>\r\n            <FeedbackButton good type=\"button\" onClick={() => onLeaveFeedback('good')}>Good</FeedbackButton>\r\n            <FeedbackButton neutral type=\"button\" onClick={() => onLeaveFeedback('neutral')}>Neutral</FeedbackButton>\r\n            <FeedbackButton bad type=\"button\" onClick={() => onLeaveFeedback('bad')}>Bad</FeedbackButton>\r\n        </FeedbackPannel>\r\n    )\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Statistic = styled.p`\r\n    margin: 0;\r\n    margin-bottom: 2px;\r\n    font-weight: ${props => props.higlight && 'bold'}\r\n`\r\n\r\nexport const StatisticPannel = styled.div`\r\n    display: inline-flex;\r\n    flex-direction: column;\r\n`","import { StatisticPannel, Statistic } from './Statistics.styled';\r\n\r\nexport const Statistics = ({good, neutral, bad, total, positivePercentage}) => {\r\n    return (\r\n        <StatisticPannel>\r\n            <Statistic>Good: {good}</Statistic>\r\n            <Statistic>Neutral: {neutral}</Statistic>\r\n            <Statistic>Bad: {bad}</Statistic>\r\n            <Statistic higlight>Total: {total()}</Statistic>\r\n            <Statistic higlight>Positive feedback: {positivePercentage()}%</Statistic>\r\n        </StatisticPannel>\r\n    )\r\n}","import styled from \"@emotion/styled\"\r\n\r\nconst Message = styled.p`\r\n    display: inline-flex;\r\n    font-weight: bold;\r\n    padding: 5px;\r\n    border: 1px solid tomato;\r\n    border-radius: 3px;\r\n    background-color: tomato;\r\n`\r\n\r\nexport const Notification = ({ message }) => {\r\n    return (\r\n        <Message>{message}</Message>\r\n    )\r\n}","import { Component } from 'react';\nimport { Section } from './Components/Section/Section';\nimport { FeedbackOptions } from './Components/FeedbackOptions/FeedbackOptions';\nimport { Statistics } from './Components/Statistics/Statistics';\nimport { Notification } from './Components/Notification';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = option => {\n    this.setState(prevState => {\n      if (this.state.hasOwnProperty(option)) {\n        return {\n          [option]: prevState[option] + 1,\n        };\n      }\n    });\n  };\n\n  render() {\n    const { good, bad, neutral } = this.state;\n\n    const countTotalFeedback = () => {\n      const values = Object.values(this.state);\n      const total = values.reduce((prevValue, value) => {\n        return prevValue + value;\n      }, 0);\n      return total;\n    };\n\n    const countPositiveFeedbackPercentage = () => {\n      const total = countTotalFeedback();\n      const percentage = (good * 100) / total;\n      return percentage.toFixed(0);\n    };\n\n    const totalFeedback = countTotalFeedback();\n\n    return (\n      <div className=\"App\">\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions onLeaveFeedback={this.onLeaveFeedback} />\n\n          {totalFeedback !== 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback}\n              positivePercentage={countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message={\"No feedback given\"}/>\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}