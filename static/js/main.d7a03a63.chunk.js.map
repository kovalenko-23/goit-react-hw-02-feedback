{"version":3,"sources":["Components/Section/Section.styled.jsx","Components/Section/Section.jsx","Components/FeedbackOptions/FeedbackOptions.styled.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Statistics/Statistics.styled.jsx","Components/Statistics/Statistics.jsx","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Section","title","children","FeedbackButton","button","FeedbackPannel","FeedbackOptions","onLeaveFeedback","onClick","Statistic","p","StatisticPannel","Statistics","good","neutral","bad","total","positivePercentage","App","state","option","setState","prevState","hasOwnProperty","this","countTotalFeedback","Object","values","reduce","prevValue","value","totalFeedback","className","toFixed","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAEaA,EAAUC,IAAOC,IAAV,oG,OCAPC,EAAU,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC5B,OACI,eAACL,EAAD,WAAUI,EAAOC,MCFZC,EAAiBL,IAAOM,OAAV,8BAGdC,EAAiBP,IAAOC,IAAV,8BCHdO,EAAkB,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBAC7B,OACI,eAACF,EAAD,WACI,cAACF,EAAD,CAAgBK,QAAS,kBAAMD,EAAgB,SAA/C,kBACA,cAACJ,EAAD,CAAgBK,QAAS,kBAAMD,EAAgB,YAA/C,qBACA,cAACJ,EAAD,CAAgBK,QAAS,kBAAMD,EAAgB,QAA/C,qBCLCE,EAAYX,IAAOY,EAAV,0CAITC,EAAkBb,IAAOC,IAAV,oFCJfa,EAAa,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBACnD,OACI,eAACN,EAAD,WACI,eAACF,EAAD,oBAAkBI,KAClB,eAACJ,EAAD,uBAAqBK,KACrB,eAACL,EAAD,mBAAiBM,KACjB,eAACN,EAAD,qBAAmBO,OACnB,eAACP,EAAD,iCAA+BQ,IAA/B,WCsDGC,EA1Df,4MACEC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOER,gBAAkB,SAAAa,GAChB,EAAKC,UAAS,SAAAC,GACZ,GAAI,EAAKH,MAAMI,eAAeH,GAC5B,OAAO,eACJA,EAASE,EAAUF,GAAU,OAXxC,4CAiBE,WAAU,IAAD,OACP,EAA+BI,KAAKL,MAA5BN,EAAR,EAAQA,KAAME,EAAd,EAAcA,IAAKD,EAAnB,EAAmBA,QAEbW,EAAqB,WAKzB,OAJeC,OAAOC,OAAO,EAAKR,OACbS,QAAO,SAACC,EAAWC,GACtC,OAAOD,EAAYC,IAClB,IAUCC,EAAgBN,IAEtB,OACE,qBAAKO,UAAU,MAAf,SACE,eAAC,EAAD,CAAS/B,MAAO,wBAAhB,UACE,cAAC,EAAD,CAAiBM,gBAAiBiB,KAAKjB,kBAEpB,IAAlBwB,EACC,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,EACPR,mBAnB8B,WACtC,IAAMD,EAAQS,IAEd,OAD2B,IAAPZ,EAAcG,GAChBiB,QAAQ,MAmBpB,6BAlDZ,GAAyBC,aCOVC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d7a03a63.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    max-width: 1400px\r\n`\r\n","import { Wrapper } from './Section.styled';\r\n\r\nexport const Section = ({title, children}) => {\r\n    return (\r\n        <Wrapper>{title}{children}</Wrapper>\r\n    )\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const FeedbackButton = styled.button`\r\n\r\n`\r\nexport const FeedbackPannel = styled.div`\r\n\r\n`","import { FeedbackButton, FeedbackPannel } from \"./FeedbackOptions.styled\";\r\n\r\nexport const FeedbackOptions = ({onLeaveFeedback}) => {\r\n    return (\r\n        <FeedbackPannel>\r\n            <FeedbackButton onClick={() => onLeaveFeedback('good')}>Good</FeedbackButton>\r\n            <FeedbackButton onClick={() => onLeaveFeedback('neutral')}>Neutral</FeedbackButton>\r\n            <FeedbackButton onClick={() => onLeaveFeedback('bad')}>Bad</FeedbackButton>\r\n        </FeedbackPannel>\r\n    )\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Statistic = styled.p`\r\n    margin:0\r\n`\r\n\r\nexport const StatisticPannel = styled.div`\r\n    display: inline-flex;\r\n    flex-direction: column;\r\n`","import { StatisticPannel, Statistic } from './Statistics.styled';\r\n\r\nexport const Statistics = ({good, neutral, bad, total, positivePercentage}) => {\r\n    return (\r\n        <StatisticPannel>\r\n            <Statistic>Good: {good}</Statistic>\r\n            <Statistic>Neutral: {neutral}</Statistic>\r\n            <Statistic>Bad: {bad}</Statistic>\r\n            <Statistic>Total: {total()}</Statistic>\r\n            <Statistic>Positive feedback: {positivePercentage()}%</Statistic>\r\n        </StatisticPannel>\r\n    )\r\n}","import { Component } from 'react';\nimport { Section } from './Components/Section/Section';\nimport { FeedbackOptions } from './Components/FeedbackOptions/FeedbackOptions';\nimport { Statistics } from './Components/Statistics/Statistics';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = option => {\n    this.setState(prevState => {\n      if (this.state.hasOwnProperty(option)) {\n        return {\n          [option]: prevState[option] + 1,\n        };\n      }\n    });\n  };\n\n  render() {\n    const { good, bad, neutral } = this.state;\n\n    const countTotalFeedback = () => {\n      const values = Object.values(this.state);\n      const total = values.reduce((prevValue, value) => {\n        return prevValue + value;\n      }, 0);\n      return total;\n    };\n\n    const countPositiveFeedbackPercentage = () => {\n      const total = countTotalFeedback();\n      const percentage = (good * 100) / total;\n      return percentage.toFixed(0);\n    };\n\n    const totalFeedback = countTotalFeedback();\n\n    return (\n      <div className=\"App\">\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions onLeaveFeedback={this.onLeaveFeedback} />\n\n          {totalFeedback !== 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback}\n              positivePercentage={countPositiveFeedbackPercentage}\n            />\n          ) : (\n            'No feedback given'\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}